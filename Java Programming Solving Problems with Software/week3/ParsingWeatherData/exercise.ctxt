#BlueJ class context
comment0.target=exercise
comment1.params=parser
comment1.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment10.params=
comment10.target=void\ testFileWithColdestTemperature()
comment11.params=
comment11.target=void\ testLowestHumidityInFile()
comment12.params=
comment12.target=void\ testLowestHumidityInManyFiles()
comment13.params=
comment13.target=void\ testAverageTemperatureInFile()
comment14.params=
comment14.target=void\ testAverageTemperatureWithHighHumidityInFile()
comment2.params=
comment2.target=java.lang.String\ fileWithColdestTemperature()
comment3.params=parser
comment3.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment4.params=
comment4.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment5.params=parser
comment5.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment6.params=parser\ value
comment6.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment7.params=parser\ header
comment7.target=org.apache.commons.csv.CSVRecord\ getLowest(org.apache.commons.csv.CSVParser,\ java.lang.String)
comment8.params=header
comment8.target=java.io.File\ getFileWithLowestRecord(java.lang.String)
comment9.params=
comment9.target=void\ testColdestHourInFile()
numComments=15
